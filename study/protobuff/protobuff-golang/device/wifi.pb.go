//*
//This is a definition based on tr-181 broadband forum wifi model for cpe devices
//Refer:
//https://cwmp-data-models.broadband-forum.org/tr-181-2-15-1-cwmp.html#H.Device:2.WiFiRadio:1%20Profile
//https://cwmp-data-models.broadband-forum.org/tr-181-2-15-1-cwmp.html#H.Device:2.WiFiSSID:1%20Profile

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.22.0
// source: wifi.proto

package device

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wifi *WiFi `protobuf:"bytes,1,opt,name=wifi,proto3" json:"wifi,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wifi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_wifi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_wifi_proto_rawDescGZIP(), []int{0}
}

func (x *Device) GetWifi() *WiFi {
	if x != nil {
		return x.Wifi
	}
	return nil
}

type WiFi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RadioNumberOfEntries uint32   `protobuf:"varint,1,opt,name=radio_number_of_entries,json=radioNumberOfEntries,proto3" json:"radio_number_of_entries,omitempty"`
	SsidNumberOfEntries  uint32   `protobuf:"varint,2,opt,name=ssid_number_of_entries,json=ssidNumberOfEntries,proto3" json:"ssid_number_of_entries,omitempty"`
	Radio                []*Radio `protobuf:"bytes,3,rep,name=radio,proto3" json:"radio,omitempty"`
	Ssid                 []*SSID  `protobuf:"bytes,4,rep,name=ssid,proto3" json:"ssid,omitempty"`
}

func (x *WiFi) Reset() {
	*x = WiFi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wifi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WiFi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WiFi) ProtoMessage() {}

func (x *WiFi) ProtoReflect() protoreflect.Message {
	mi := &file_wifi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WiFi.ProtoReflect.Descriptor instead.
func (*WiFi) Descriptor() ([]byte, []int) {
	return file_wifi_proto_rawDescGZIP(), []int{1}
}

func (x *WiFi) GetRadioNumberOfEntries() uint32 {
	if x != nil {
		return x.RadioNumberOfEntries
	}
	return 0
}

func (x *WiFi) GetSsidNumberOfEntries() uint32 {
	if x != nil {
		return x.SsidNumberOfEntries
	}
	return 0
}

func (x *WiFi) GetRadio() []*Radio {
	if x != nil {
		return x.Radio
	}
	return nil
}

func (x *WiFi) GetSsid() []*SSID {
	if x != nil {
		return x.Ssid
	}
	return nil
}

type Radio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable                  bool        `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	Status                  string      `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Alias                   string      `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
	Name                    string      `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Upstream                bool        `protobuf:"varint,5,opt,name=upstream,proto3" json:"upstream,omitempty"`
	MaxBitRate              uint32      `protobuf:"varint,6,opt,name=max_bit_rate,json=maxBitRate,proto3" json:"max_bit_rate,omitempty"`
	SupportedFrequencyBands []string    `protobuf:"bytes,7,rep,name=supported_frequency_bands,json=supportedFrequencyBands,proto3" json:"supported_frequency_bands,omitempty"`
	OperatingFrequencyBand  string      `protobuf:"bytes,8,opt,name=operating_frequency_band,json=operatingFrequencyBand,proto3" json:"operating_frequency_band,omitempty"`
	Channel                 uint32      `protobuf:"varint,9,opt,name=channel,proto3" json:"channel,omitempty"`
	Stats                   *RadioStats `protobuf:"bytes,10,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *Radio) Reset() {
	*x = Radio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wifi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Radio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Radio) ProtoMessage() {}

func (x *Radio) ProtoReflect() protoreflect.Message {
	mi := &file_wifi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Radio.ProtoReflect.Descriptor instead.
func (*Radio) Descriptor() ([]byte, []int) {
	return file_wifi_proto_rawDescGZIP(), []int{2}
}

func (x *Radio) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *Radio) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Radio) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *Radio) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Radio) GetUpstream() bool {
	if x != nil {
		return x.Upstream
	}
	return false
}

func (x *Radio) GetMaxBitRate() uint32 {
	if x != nil {
		return x.MaxBitRate
	}
	return 0
}

func (x *Radio) GetSupportedFrequencyBands() []string {
	if x != nil {
		return x.SupportedFrequencyBands
	}
	return nil
}

func (x *Radio) GetOperatingFrequencyBand() string {
	if x != nil {
		return x.OperatingFrequencyBand
	}
	return ""
}

func (x *Radio) GetChannel() uint32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

func (x *Radio) GetStats() *RadioStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type RadioStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BytesSent       uint64 `protobuf:"varint,1,opt,name=bytes_sent,json=bytesSent,proto3" json:"bytes_sent,omitempty"`
	BytesReceived   uint64 `protobuf:"varint,2,opt,name=bytes_received,json=bytesReceived,proto3" json:"bytes_received,omitempty"`
	PacketsSent     uint64 `protobuf:"varint,3,opt,name=packets_sent,json=packetsSent,proto3" json:"packets_sent,omitempty"`
	PacketsReceived uint64 `protobuf:"varint,4,opt,name=packets_received,json=packetsReceived,proto3" json:"packets_received,omitempty"`
	ErrorsSent      uint32 `protobuf:"varint,5,opt,name=errors_sent,json=errorsSent,proto3" json:"errors_sent,omitempty"`
	ErrorsReceived  uint32 `protobuf:"varint,6,opt,name=errors_received,json=errorsReceived,proto3" json:"errors_received,omitempty"`
}

func (x *RadioStats) Reset() {
	*x = RadioStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wifi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RadioStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RadioStats) ProtoMessage() {}

func (x *RadioStats) ProtoReflect() protoreflect.Message {
	mi := &file_wifi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RadioStats.ProtoReflect.Descriptor instead.
func (*RadioStats) Descriptor() ([]byte, []int) {
	return file_wifi_proto_rawDescGZIP(), []int{3}
}

func (x *RadioStats) GetBytesSent() uint64 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *RadioStats) GetBytesReceived() uint64 {
	if x != nil {
		return x.BytesReceived
	}
	return 0
}

func (x *RadioStats) GetPacketsSent() uint64 {
	if x != nil {
		return x.PacketsSent
	}
	return 0
}

func (x *RadioStats) GetPacketsReceived() uint64 {
	if x != nil {
		return x.PacketsReceived
	}
	return 0
}

func (x *RadioStats) GetErrorsSent() uint32 {
	if x != nil {
		return x.ErrorsSent
	}
	return 0
}

func (x *RadioStats) GetErrorsReceived() uint32 {
	if x != nil {
		return x.ErrorsReceived
	}
	return 0
}

type SSID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable bool   `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Alias  string `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
	Name   string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Comma-separated list (maximum number of characters 1024) of strings.
	// Each list item MUST be the Path Name of an interface object that is stacked immediately below this interface object.
	// Ex: "Device.WiFi.Radio.0", "Device.WiFi.Radio.1"
	LowerLayers []string `protobuf:"bytes,5,rep,name=lower_layers,json=lowerLayers,proto3" json:"lower_layers,omitempty"`
	// This is the MAC address of the access point, which can either be local (when this instance models an access point SSID) or remote (when this instance models an end point SSID).
	Bssid []byte `protobuf:"bytes,6,opt,name=bssid,proto3" json:"bssid,omitempty"`
	// If this instance models an access point SSID, MACAddress is the same as BSSID.
	// macaddress has 6 bytes, in string format it total size is 17 with 5 delimiter
	// Ex. FF-FF-FF-FF-FF-FF or FF:FF:FF:FF:FF:FF
	MacAddress []byte     `protobuf:"bytes,7,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	Ssid       string     `protobuf:"bytes,8,opt,name=ssid,proto3" json:"ssid,omitempty"`
	Stats      *SSIDStats `protobuf:"bytes,9,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *SSID) Reset() {
	*x = SSID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wifi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSID) ProtoMessage() {}

func (x *SSID) ProtoReflect() protoreflect.Message {
	mi := &file_wifi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSID.ProtoReflect.Descriptor instead.
func (*SSID) Descriptor() ([]byte, []int) {
	return file_wifi_proto_rawDescGZIP(), []int{4}
}

func (x *SSID) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *SSID) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SSID) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *SSID) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SSID) GetLowerLayers() []string {
	if x != nil {
		return x.LowerLayers
	}
	return nil
}

func (x *SSID) GetBssid() []byte {
	if x != nil {
		return x.Bssid
	}
	return nil
}

func (x *SSID) GetMacAddress() []byte {
	if x != nil {
		return x.MacAddress
	}
	return nil
}

func (x *SSID) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

func (x *SSID) GetStats() *SSIDStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type SSIDStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BytesSent       uint64 `protobuf:"varint,1,opt,name=bytes_sent,json=bytesSent,proto3" json:"bytes_sent,omitempty"`
	BytesReceived   uint64 `protobuf:"varint,2,opt,name=bytes_received,json=bytesReceived,proto3" json:"bytes_received,omitempty"`
	PacketsSent     uint64 `protobuf:"varint,3,opt,name=packets_sent,json=packetsSent,proto3" json:"packets_sent,omitempty"`
	PacketsReceived uint64 `protobuf:"varint,4,opt,name=packets_received,json=packetsReceived,proto3" json:"packets_received,omitempty"`
	ErrorsSent      uint32 `protobuf:"varint,5,opt,name=errors_sent,json=errorsSent,proto3" json:"errors_sent,omitempty"`
	ErrorsReceived  uint32 `protobuf:"varint,6,opt,name=errors_received,json=errorsReceived,proto3" json:"errors_received,omitempty"`
}

func (x *SSIDStats) Reset() {
	*x = SSIDStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wifi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSIDStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSIDStats) ProtoMessage() {}

func (x *SSIDStats) ProtoReflect() protoreflect.Message {
	mi := &file_wifi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSIDStats.ProtoReflect.Descriptor instead.
func (*SSIDStats) Descriptor() ([]byte, []int) {
	return file_wifi_proto_rawDescGZIP(), []int{5}
}

func (x *SSIDStats) GetBytesSent() uint64 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *SSIDStats) GetBytesReceived() uint64 {
	if x != nil {
		return x.BytesReceived
	}
	return 0
}

func (x *SSIDStats) GetPacketsSent() uint64 {
	if x != nil {
		return x.PacketsSent
	}
	return 0
}

func (x *SSIDStats) GetPacketsReceived() uint64 {
	if x != nil {
		return x.PacketsReceived
	}
	return 0
}

func (x *SSIDStats) GetErrorsSent() uint32 {
	if x != nil {
		return x.ErrorsSent
	}
	return 0
}

func (x *SSIDStats) GetErrorsReceived() uint32 {
	if x != nil {
		return x.ErrorsReceived
	}
	return 0
}

var File_wifi_proto protoreflect.FileDescriptor

var file_wifi_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x77, 0x69, 0x66, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x22, 0x2a, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x20,
	0x0a, 0x04, 0x77, 0x69, 0x66, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x57, 0x69, 0x46, 0x69, 0x52, 0x04, 0x77, 0x69, 0x66, 0x69,
	0x22, 0xb9, 0x01, 0x0a, 0x04, 0x57, 0x69, 0x46, 0x69, 0x12, 0x35, 0x0a, 0x17, 0x72, 0x61, 0x64,
	0x69, 0x6f, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x65, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x72, 0x61, 0x64, 0x69,
	0x6f, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x12, 0x33, 0x0a, 0x16, 0x73, 0x73, 0x69, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x6f, 0x66, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x13, 0x73, 0x73, 0x69, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x45, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x72, 0x61, 0x64, 0x69, 0x6f, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61,
	0x64, 0x69, 0x6f, 0x52, 0x05, 0x72, 0x61, 0x64, 0x69, 0x6f, 0x12, 0x20, 0x0a, 0x04, 0x73, 0x73,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x53, 0x49, 0x44, 0x52, 0x04, 0x73, 0x73, 0x69, 0x64, 0x22, 0xd9, 0x02, 0x0a,
	0x05, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x20, 0x0a, 0x0c,
	0x6d, 0x61, 0x78, 0x5f, 0x62, 0x69, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x42, 0x69, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x3a,
	0x0a, 0x19, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x17, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x38, 0x0a, 0x18, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x79, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79,
	0x42, 0x61, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x28,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x61, 0x64, 0x69, 0x6f, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x22, 0xea, 0x01, 0x0a, 0x0a, 0x52, 0x61, 0x64,
	0x69, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x53, 0x65, 0x6e, 0x74,
	0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x22, 0xf7, 0x01, 0x0a, 0x04, 0x53, 0x53, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x73, 0x73, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x73, 0x73, 0x69,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x73, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x73, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x53, 0x49, 0x44, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x22,
	0xe9, 0x01, 0x0a, 0x09, 0x53, 0x53, 0x49, 0x44, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x62, 0x79, 0x74, 0x65, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x62, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5f, 0x73,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x53, 0x65,
	0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x5f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x42, 0x2e, 0x5a, 0x2c, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x61, 0x6e, 0x6b, 0x61, 0x72,
	0x38, 0x38, 0x38, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x2d, 0x67, 0x6f,
	0x6c, 0x61, 0x6e, 0x67, 0x3b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_wifi_proto_rawDescOnce sync.Once
	file_wifi_proto_rawDescData = file_wifi_proto_rawDesc
)

func file_wifi_proto_rawDescGZIP() []byte {
	file_wifi_proto_rawDescOnce.Do(func() {
		file_wifi_proto_rawDescData = protoimpl.X.CompressGZIP(file_wifi_proto_rawDescData)
	})
	return file_wifi_proto_rawDescData
}

var file_wifi_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_wifi_proto_goTypes = []interface{}{
	(*Device)(nil),     // 0: device.Device
	(*WiFi)(nil),       // 1: device.WiFi
	(*Radio)(nil),      // 2: device.Radio
	(*RadioStats)(nil), // 3: device.RadioStats
	(*SSID)(nil),       // 4: device.SSID
	(*SSIDStats)(nil),  // 5: device.SSIDStats
}
var file_wifi_proto_depIdxs = []int32{
	1, // 0: device.Device.wifi:type_name -> device.WiFi
	2, // 1: device.WiFi.radio:type_name -> device.Radio
	4, // 2: device.WiFi.ssid:type_name -> device.SSID
	3, // 3: device.Radio.stats:type_name -> device.RadioStats
	5, // 4: device.SSID.stats:type_name -> device.SSIDStats
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_wifi_proto_init() }
func file_wifi_proto_init() {
	if File_wifi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wifi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wifi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WiFi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wifi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Radio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wifi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RadioStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wifi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wifi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSIDStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wifi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wifi_proto_goTypes,
		DependencyIndexes: file_wifi_proto_depIdxs,
		MessageInfos:      file_wifi_proto_msgTypes,
	}.Build()
	File_wifi_proto = out.File
	file_wifi_proto_rawDesc = nil
	file_wifi_proto_goTypes = nil
	file_wifi_proto_depIdxs = nil
}
